name: Semgrep - SAST Scan

on:
  pull_request_target:
    types: [ closed, edited, opened, synchronize, ready_for_review ]

jobs:
  semgrep:
    permissions:
      contents: read
      actions: read
      pull-requests: write
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Checkout semgrep-rules repo
        uses: actions/checkout@v3
        with:
          repository: sourcegraph/security-semgrep-rules
          token: ${{ secrets.GH_SEMGREP_SAST_TOKEN }}
          path: semgrep-rules 

      - name: Run Semgrep SAST Scan
        run: |
          mv semgrep-rules ../
          semgrep ci -f ../semgrep-rules/semgrep-rules/ --metrics=off --oss-only --suppress-errors --json -o result.json --verbose --baseline-commit "$(git merge-base main HEAD)" || true

      - uses: actions/setup-go@v4
        with: { go-version: '1.21' }

      - name: set env
        run: |
          echo "LATEST_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Semgrep post processing step
        env:
          SEMGREP_GITHUB_APP_PRIVATE_KEY: ${{ secrets.SEMGREP_GITHUB_APP_PRIVATE_KEY }}
          SEMGREPSAST_VERIFY_TOKEN: ${{ secrets.SEMGREPSAST_VERIFY_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.event.repository.name }}
          GITHUB_PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          cp result.json ../semgrep-rules/scripts/result.json
          cd ..
          cd semgrep-rules/scripts
          go mod download
          go run main.go
